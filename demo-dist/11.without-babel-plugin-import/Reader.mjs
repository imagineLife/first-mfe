"use strict";(self.webpackChunkfirst_mfe=self.webpackChunkfirst_mfe||[]).push([[92],{1798:(e,t,n)=>{n.r(t),n.d(t,{default:()=>T});var r=n(822),a=n.n(r),o=n(1138),l=n(8594),i=n(8720);function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===c(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e){var t=e.sx,n=e.h1,r=e.h2,o=e.h3,c=e.h4,s=e.h5,p=e.h6,h=e.children;return a().createElement(i.Z,{sx:m({},t)},n&&a().createElement(l.Typography,{variant:"h1"},n),r&&a().createElement(l.Typography,{variant:"h2"},r),o&&a().createElement(l.Typography,{variant:"h3"},o),c&&a().createElement(l.Typography,{variant:"h4"},c),s&&a().createElement(l.Typography,{variant:"h5"},s),p&&a().createElement(l.Typography,{variant:"h6"},p),h)}var d=n(7212),u=n(848),E=n(1702);function y(){return a().createElement(h,{h2:"Initial Setup",sx:{p:6}},a().createElement(h,{h3:"Dependencies",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},'The app is setup without the module federation to begin with: something like a "vanilla" react-based frontend project.'),a().createElement(l.Typography,{variant:"body1"},"The dependencies are relatively simple here: react, webpack, babel, and material ui for some components ",a().createElement("i",null,"(and all of their dependencies)"),":"),a().createElement("code",{style:{whiteSpace:"pre"}},'"dependencies": {\n    "@babel/core": "^7.20.5",\n    "@babel/preset-env": "^7.20.2",\n    "@babel/preset-react": "^7.18.6",\n    "@emotion/react": "^11.10.5",\n    "@emotion/styled": "^11.10.5",\n    "@mui/icons-material": "^5.10.16",\n    "@mui/material": "^5.10.17",\n    "babel-loader": "^9.1.0",\n    "html-webpack-plugin": "^5.5.0",\n    "react": "^18.2.0",\n    "react-dom": "^18.2.0",\n    "webpack": "^5.75.0",\n    "webpack-cli": "^5.0.1"\n  }')),a().createElement(h,{h3:"UI Parts",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},a().createElement("b",null,"THE APP")," starts with a layout and this text content."),a().createElement(l.Typography,{variant:"body1"},a().createElement("b",null,"THE LAYOUT")," consists of a wrapper around a nav and some content."),a().createElement(l.Typography,{variant:"body1"},a().createElement("b",null,"THE NAV")," is the most complex part. There are a bunch of more components in the nav than listed here, but the ux outcome of the responsive nav is"),a().createElement(d.Z,null,a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"An AppBar",secondary:"The Sandwich Icon in mobile mode and the toolbar showing 3 menu items (made up items here)"})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"A Drawer",secondary:'The "open" drawer in mobile mode'}))),a().createElement(l.Typography,{variant:"body1"},a().createElement("b",null,"THE TEXT")," content is served as part of a ",a().createElement("code",null,"<Reader />")," component, served as a child of the ",a().createElement("code",null,"<DefaultLayout />")," component"),a().createElement(l.Typography,{variant:"h4"},a().createElement(l.Typography,{variant:"body1"},"The ",a().createElement("code",null,"<App />")," puts the layout and the Reader together in a small file that reads ",a().createElement("i",null,'(note the "window" gets passed around for a detail)')),a().createElement(l.Typography,{variant:"body1"},a().createElement("code",{style:{whiteSpace:"pre"}},"export default function App({window}) {\n  return (\n    <DefaultLayout window={window}>\n      <Reader />\n    </DefaultLayout>\n  );\n}")))))}var g=n(887);function b(){return a().createElement(h,{h3:"Updating The Host App",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},"Enabling"," ",a().createElement("a",{href:"https://webpack.js.org/concepts/module-federation/",target:"none"},"Module Federation")," ",'involves adjusting the "host" app to work with module federation. This mostly involves tinkering with Webpack config, as module federation affects how parts of an app like this are built, bundled, and deployed. ',a().createElement("i",null,"(NOTE: the docs are referenced throughout this doc)")),a().createElement(l.Typography,{variant:"body1"},a().createElement("b",null,'The "Host" App'),' principle gets introduced, where the app becomes able to "consume" code produced by another module. The host app is configured to look for a specific named js file where that named js file is responsible for "taking over" and "owning" the federated module, the Micro Frontend.'),a().createElement(l.Typography,{variant:"body1"},a().createElement("b",null,"A New Plugin")," gets introduced into the webpack plugins array configuration: the"," ",a().createElement("a",{href:"https://webpack.js.org/concepts/module-federation",target:"none"},a().createElement("code",null,"ModuleFederationPlugin")),". ",a().createElement("br",null),"The plugin can be imported into the webpack config with something like"," ",a().createElement("code",null,'const { ModuleFederationPlugin: ModFedPlugin } = require("webpack").container'),". ",a().createElement("br",null),"The webpack config plugins array can get something like this added to it:"),a().createElement("code",{style:{whiteSpace:"pre"}}," new ModFedPlugin({\n  name: THIS_FED_MOD.NAME,\n  filename: 'host-app',\n  remotes: {},\n  exposes: {},\n  shared: {\n    ...deps,\n  },\n}"),a().createElement(l.Typography,null,a().createElement("b",null,"name")," is a friendly name for this host module."),a().createElement(l.Typography,null,a().createElement("b",null,"filename")," is the filename for this module's"," ",a().createElement("i",null,'(now as a "host" app or "container" app)')," relative path inside the `output.path` directory"),a().createElement(l.Typography,null,a().createElement("b",null,"remotes"),' are key/value pairs of other modules that this module consumes - "remote" modules. Right now there are no entries there, but this will get populated once a part of this app gets broken out into a separate micro-frontend Federated Module.'),a().createElement(l.Typography,null,a().createElement("b",null,"exposes")," is an obj of modules that should be exposed by this module. When this has content, each key is used as public name."," ",a().createElement("i",null,"(otherwise public name is automatically inferred from request)")),a().createElement(l.Typography,null,a().createElement("b",null,"shared"),' is used here to describe which node_modules are "shared" and accessible across projects. The spread ',a().createElement("code",null,"deps")," object is sourced earlier in the file from"," ",a().createElement("code",null,"const deps = require('./package.json').dependencies;")),a().createElement(h,{h4:"Introduce A Workaround File",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},'Most "boilerplate" react/webpack/babel frontend build systems use the'," ",a().createElement("code",null,"index.js")," as the entrypoint, and this project will also. The workaround, though, comes from"," ",a().createElement("a",{href:"https://webpack.js.org/concepts/module-federation/#uncaught-error-shared-module-is-not-available-for-eager-consumption",target:"none"},"An Error That Webpack Will Throw Later On Withouth This")," ","and a documented suggested adjustment. Basically, set the ",a().createElement("code",null,"index.js")," file to"," ",a().createElement("i",null,"only import another file")," where the other file will contain the code to trigger React rendering to an element."),a().createElement("code",{style:{whiteSpace:"pre"}},"\n// index.js looks like...\nimport(/* webpackChunkName: \"mfeWorkaround\" */ './mfeWorkaround');"),a().createElement("br",null),a().createElement("code",{style:{whiteSpace:"pre"}},"\n// mfeWorkaround.js looks like...\nimport React from 'react';\nimport ReactDomClient from 'react-dom/client';\nimport App from './app';\n\nconst MFE_PARENT_DIV = 'mfe-root';\nconst rootElement = document.getElementById(MFE_PARENT_DIV);\n\nif (rootElement) {\n  const root = ReactDomClient.createRoot(rootElement);\n  root.render(<App />);\n}\n")),a().createElement(h,{h4:"Some Env Var Housekeeping",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},'Here, I set some values in the "start" script ',a().createElement("i",null,'(as well as the "build" script)')," of the package.json. These values get used in the code where needed"," ",a().createElement("i",null,"(mostly in webpack config)"),":"),a().createElement("br",null),a().createElement("code",{style:{whiteSpace:"pre"}},'"start": "HOST_FED_MOD_HOST=localhost HOST_FED_MOD_PORT=8080 webpack serve --mode=development",'),a().createElement("br",null),a().createElement("br",null),a().createElement(l.Typography,{variant:"body1"},"Here, I use these env vars in the webpack config file before constructing the config object:"),a().createElement("br",null),a().createElement("code",{style:{whiteSpace:"pre"}},"const FED_MOD_HOST = process.env.HOST_FED_MOD_HOST || 'localhost'\nconst FED_MOD_PORT = process.env.HOST_FED_MOD_PORT || 8080;\nconst THIS_FED_MOD = {\n  NAME: 'host-app',\n  FILENAME: 'remoteEntry.js',\n  URL: `http://${FED_MOD_HOST}:${FED_MOD_PORT}/`,\n}")),a().createElement(h,{h4:"Config Impact On Production Bundle",sx:{p:4}},a().createElement(l.Typography,{variant:"body1"},"A Few things happen when adding the module federation plugin:"),a().createElement(d.Z,null,a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"A Larger Index File",secondary:"Right now, the index.js file gets bigger - big enough to trigger the alert of webpack during the build process - after running 'npm run build' an error shows in the terminal: WARNING in entrypoint size limit: \"The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance. Entrypoints: index (662 KiB)\""})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Setup to Consume Other MFE code",secondary:'The "remotes: {}," in the ModuleFederationPlugin config object is the key to making this repo able to consume js from a different project!'})))),a().createElement(l.Typography,{variant:"body2"},a().createElement(g.Z,{href:"https://scriptedalchemy.medium.com/",target:"none"},"Zachary Jackson"),", the creator of Module federation using webpack"," ",a().createElement("i",null,"(along with Marais Rossouw and Tobias Koppers)"),", has"," ",a().createElement(g.Z,{href:"https://levelup.gitconnected.com/micro-frontend-architecture-replacing-a-monolith-from-the-inside-out-61f60d2e14c1",target:"none"},"a")," ",a().createElement(g.Z,{href:"https://medium.com/swlh/webpack-5-module-federation-a-game-changer-to-javascript-architecture-bcdd30e02669",target:"none"},"bunch")," ",a().createElement(g.Z,{href:"https://scriptedalchemy.medium.com/module-federation-how-do-we-create-unit-tests-for-it-bd0d73c999bc",target:"none"},"of")," ",a().createElement(g.Z,{href:"https://scriptedalchemy.medium.com/server-side-rendering-tactics-for-federated-applications-765ec675d188",target:"none"},"great")," ",a().createElement(g.Z,{href:"https://scriptedalchemy.medium.com/when-should-you-leverage-module-federation-and-how-2998b132c840",target:"none"},"writings")," ","on the topic."))}function f(){return a().createElement(h,{h3:"Initializing Two Projects",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},'Here, another single-page-app gets made. In the longer run this will contain the federated module that gets consumed by the "host" app.'),a().createElement(l.Typography,{variant:"body1"},a().createElement(d.Z,null,a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Migrate The Host Code To A New SubDirectory",secondary:'In this case the repo will now have 2 "sub" repos in it: one for the "host" app, and one for the "remote" that the host app will consume. Create a new dir in the repo called "host" and move as many files into that directory as needed to make it run: src code, webpack+babel configs, npm files, etc.'})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Create The Remote",secondary:'The "remote" entry, the module being federated here, will be a sibling directory of the host app. For simplicity as a proof-of-concept here, the majority of the host app can be cloned to a sibling repo - I\'ll call it NavApp. Change the src of the new project to return a super simple component without the majority of the code from the host - something like a "Nav = () => <div id="nav">Nav Here</div>".'})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Set The Remote As A Skeletop SPA",secondary:a().createElement(a().Fragment,null,a().createElement("p",null,"Return a simple div as the app - minimal ui code to start. The focus at this point is to begin setting up the MFE communication between the two repos. The UI for the nav will come shortly!"),a().createElement("code",{style:{whiteSpace:"pre"}},"import React from 'react';\n\nexport const Nav = () => { \n  return (<div id=\"nav\">Nav Here</div>)\n}"),a().createElement("p",null,"I've only had success, connecting this component to the host app, with this component as a named export: not as a default export."),a().createElement("p",null,"Update the dev port to run on: the host app, in my case, runs on 8080. I set this new repo to run on 8081."),a().createElement("p",null,"Adjust the ModuleFederationPlugin config object:"),a().createElement("code",{style:{whiteSpace:"pre"}},"new ModFedPlugin({\n  name: 'nav',\n  filename: 'remoteEntry.js',\n  remotes: {},\n  exposes: { './Nav': './src/components/Nav' },\n  shared: {\n    ...deps,\n    react: {\n      singleton: true,\n      requiredVersion: deps.react,\n      eager: true\n    },\n    'react-dom': {\n      singleton: true,\n      requiredVersion: deps['react-dom'],\n      eager: true\n    },\n  },\n}),"),a().createElement("p",null,'The filename, here, will match an updated field in the host ModuleFederation Plugin. The extended react & react-dom details in the "shared" object are added primarily due to a'," ",a().createElement("a",{href:"https://webpack.js.org/concepts/module-federation/#uncaught-error-shared-module-is-not-available-for-eager-consumption",target:"none"},"Known Error-Driven-Development Documentation note")," ","by the webpack team, where eager module loading matters. Validate that the new app can be served from the new port (",a().createElement("i",null,"here at localhost:8081"),"), and that the ",a().createElement("code",null,"npm run build")," command puts a bunch of js/html into the dist folder in the repo. With this, the remote is a skeleton ready to connect to the host app!"))})))))}function w(){return a().createElement(h,{h3:"Connect The Two With the ModuleFederationPlugin",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},'Here, the host app is enabled and "listening" for content from the sibling federated module. The ModuleFederationPlugin config needs to be adjusted on boths apps.'),a().createElement(d.Z,null,a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Setup the Nav To Expose Itself",secondary:a().createElement(r.Fragment,null,a().createElement("p",null,'The Nav Module will now be able to be consumed by other federated modules. In the nav\'s webpack config, inside the ModuleFederationPlugin config object, change the "exposes" key contents to something like this:'),a().createElement("code",{style:{whiteSpace:"pre"}},"exposes: { './Nav': './src/components/Nav' },"),a().createElement("p",null,'Doing this will make this Nav module exposable. Here, the string that will represent this module will be "nav/Nav" - a combination of the module\'s name'," ",a().createElement("i",null,'(declared in the moduleFederationPlugin "name" field)'),' and exposed key in this "exposes" object. Curious minds might notice that this single federated module can expose many modules with new keys! Interesting stuff here.'))})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Setup the Host To Consume The Nav Module",secondary:a().createElement(r.Fragment,null,a().createElement("p",null,'The host\'s moduleFederationPlugin "remotes" key/value gets populated. The content and syntax, here, is particular:'),a().createElement("code",{style:{whiteSPace:"pre"}},"nav@http://localhost:8081/remoteEntry.js"),a().createElement("p",null,"the name of the module (",a().createElement("i",null,"nav"),")"),a().createElement("p",null,'The Network type "@http://"'),a().createElement("p",null,'The host and port of the nav module "localhost:8081"'),a().createElement("p",null,'The name of the remote module\'s "filename": "remoteEntry.js"'),a().createElement("p",null,"I've also had success converting a bunch of those values into variables, potentially taken out of the app entirely later on:"),a().createElement("code",{style:{whiteSpace:"pre"}},"const NAV_FED_OBJ = {\n  NAME: 'nav',\n  HOST: 'http://localhost',\n  PORT: process.env.NAV_MOD_PORT || 8081,\n  FILE: 'remoteEntry.js',\n};\nconst NAV_FED_STR = ${NAV_FED_OBJ.NAME}@${NAV_FED_OBJ.HOST}:${NAV_FED_OBJ.PORT}/${NAV_FED_OBJ.FILE};\nconst NAV_FED_REMOTE = {\n  nav: NAV_FED_STR,\n};"),a().createElement("p",null,"Then in the plugin:"),a().createElement("code",{style:{whiteSpace:"pre"}},"remotes: {\n        ...NAV_FED_REMOTE,\n      },"))}))),a().createElement(h,{h4:"Import and Use The Remote Module In The Host App",sx:{p:3}},a().createElement(d.Z,null,a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Import the remote, the nav, in the host where you want to use it -",secondary:a().createElement("code",{style:{whiteSpace:"pre"}},"import { Nav } from 'nav/Nav';")})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Render the Nav in the host somewhere",secondary:a().createElement("code",{style:{whiteSpace:"pre"}},"<Nav />")})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Start Both Modules & See The Host Render The Remote Item!",secondary:a().createElement("ul",null,a().createElement("li",null,"Start the remote module, the nav project, in one terminal instance:"," ",a().createElement("code",{style:{whiteSpace:"pre"}},"remote$ npm run start")),a().createElement("li",null,"Start the host module in another terminal instance:"," ",a().createElement("code",{style:{whiteSpace:"pre"}},"host$ npm run start")))})))))}function v(){return a().createElement(h,{h3:"Bundling For Production",sx:{p:3}},a().createElement(l.Typography,{variant:"body1"},'Traditional Single-Page-Applications built with react and Webpack are a bit less to deal with than this type of federated module setup. This setups creates 2 sets of "bundled" code, one for the host and one for the remote, rather than one bundle for the single app.'),a().createElement(d.Z,null,a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Bundle The Host",secondary:a().createElement(l.Typography,{variant:"body1"},"The host gets bundled like a traditional single-page-application. Running something like ",a().createElement("code",null,"webpack --mode=production"),", maybe assigned to an npm command (",a().createElement("i",null,a().createElement("code",null,"npm run build")),') will convert the code to production-ready output into a "dist" directory.')})),a().createElement(u.ZP,null,a().createElement(E.Z,{primary:"Bundling The Remote",secondary:a().createElement(l.Typography,{variant:"body1"},"The remote also gets bundled like a traditional single-page-application. Running something like ",a().createElement("code",null,"webpack --mode=production"),", maybe assigned to an npm command (",a().createElement("i",null,a().createElement("code",null,"npm run build")),') will convert the code to production-ready output into a "dist" directory.')}))))}function T(){return a().createElement(r.Fragment,null,a().createElement(o.Z,{variant:"h1"},"Getting Started"),a().createElement(y,null),a().createElement(o.Z,{variant:"h1"},"Enabling Module Federation"),a().createElement(b,null),a().createElement(f,null),a().createElement(w,null),a().createElement(v,null))}}}]);